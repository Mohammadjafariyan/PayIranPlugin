<?php
/**
 * UsersTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Dynamic API Specification
 *
 * This is a dynamically generated API specification for all endpoints existing on the current project.
 *
 * OpenAPI spec version: 12.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.43
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

use PHPUnit\Framework\TestCase;

/**
 * UsersTest Class Doc Comment
 *
 * @category    Class
 * @description Users
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class UsersTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Users"
     */
    public function testUsers()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "first_name"
     */
    public function testPropertyFirstName()
    {
    }

    /**
     * Test attribute "last_name"
     */
    public function testPropertyLastName()
    {
    }

    /**
     * Test attribute "email"
     */
    public function testPropertyEmail()
    {
    }

    /**
     * Test attribute "password"
     */
    public function testPropertyPassword()
    {
    }

    /**
     * Test attribute "location"
     */
    public function testPropertyLocation()
    {
    }

    /**
     * Test attribute "title"
     */
    public function testPropertyTitle()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "tags"
     */
    public function testPropertyTags()
    {
    }

    /**
     * Test attribute "avatar"
     */
    public function testPropertyAvatar()
    {
    }

    /**
     * Test attribute "language"
     */
    public function testPropertyLanguage()
    {
    }

    /**
     * Test attribute "theme"
     */
    public function testPropertyTheme()
    {
    }

    /**
     * Test attribute "tfa_secret"
     */
    public function testPropertyTfaSecret()
    {
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
    }

    /**
     * Test attribute "role"
     */
    public function testPropertyRole()
    {
    }

    /**
     * Test attribute "token"
     */
    public function testPropertyToken()
    {
    }

    /**
     * Test attribute "last_access"
     */
    public function testPropertyLastAccess()
    {
    }

    /**
     * Test attribute "last_page"
     */
    public function testPropertyLastPage()
    {
    }

    /**
     * Test attribute "provider"
     */
    public function testPropertyProvider()
    {
    }

    /**
     * Test attribute "external_identifier"
     */
    public function testPropertyExternalIdentifier()
    {
    }

    /**
     * Test attribute "auth_data"
     */
    public function testPropertyAuthData()
    {
    }

    /**
     * Test attribute "email_notifications"
     */
    public function testPropertyEmailNotifications()
    {
    }

    /**
     * Test attribute "preferences_divider"
     */
    public function testPropertyPreferencesDivider()
    {
    }

    /**
     * Test attribute "admin_divider"
     */
    public function testPropertyAdminDivider()
    {
    }
}
