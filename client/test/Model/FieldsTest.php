<?php
/**
 * FieldsTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Dynamic API Specification
 *
 * This is a dynamically generated API specification for all endpoints existing on the current project.
 *
 * OpenAPI spec version: 12.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.43
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

use PHPUnit\Framework\TestCase;

/**
 * FieldsTest Class Doc Comment
 *
 * @category    Class
 * @description Fields
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class FieldsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Fields"
     */
    public function testFields()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "collection"
     */
    public function testPropertyCollection()
    {
    }

    /**
     * Test attribute "field"
     */
    public function testPropertyField()
    {
    }

    /**
     * Test attribute "special"
     */
    public function testPropertySpecial()
    {
    }

    /**
     * Test attribute "interface"
     */
    public function testPropertyInterface()
    {
    }

    /**
     * Test attribute "options"
     */
    public function testPropertyOptions()
    {
    }

    /**
     * Test attribute "display"
     */
    public function testPropertyDisplay()
    {
    }

    /**
     * Test attribute "display_options"
     */
    public function testPropertyDisplayOptions()
    {
    }

    /**
     * Test attribute "readonly"
     */
    public function testPropertyReadonly()
    {
    }

    /**
     * Test attribute "hidden"
     */
    public function testPropertyHidden()
    {
    }

    /**
     * Test attribute "sort"
     */
    public function testPropertySort()
    {
    }

    /**
     * Test attribute "width"
     */
    public function testPropertyWidth()
    {
    }

    /**
     * Test attribute "translations"
     */
    public function testPropertyTranslations()
    {
    }

    /**
     * Test attribute "note"
     */
    public function testPropertyNote()
    {
    }

    /**
     * Test attribute "conditions"
     */
    public function testPropertyConditions()
    {
    }

    /**
     * Test attribute "required"
     */
    public function testPropertyRequired()
    {
    }

    /**
     * Test attribute "group"
     */
    public function testPropertyGroup()
    {
    }

    /**
     * Test attribute "validation"
     */
    public function testPropertyValidation()
    {
    }

    /**
     * Test attribute "validation_message"
     */
    public function testPropertyValidationMessage()
    {
    }
}
