<?php
/**
 * ItemsGateway
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Dynamic API Specification
 *
 * This is a dynamically generated API specification for all endpoints existing on the current project.
 *
 * OpenAPI spec version: 12.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.43
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ItemsGateway Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ItemsGateway implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ItemsGateway';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
'sort' => 'int',
'user_created' => 'OneOfItemsGatewayUserCreated',
'date_created' => 'string',
'user_updated' => 'OneOfItemsGatewayUserUpdated',
'date_updated' => 'string',
'subsidiary_account' => 'OneOfItemsGatewaySubsidiaryAccount',
'title' => 'string',
'unique_url_address' => 'string',
'is_default' => 'bool',
'description' => 'string',
'image' => 'OneOfItemsGatewayImage',
'sms_notification_mobile' => 'string',
'email_notification' => 'string',
'web_hook' => 'string',
'browser_notification' => 'bool',
'telegram_bot' => 'string',
'social_twitter' => 'string',
'social_instagram' => 'string',
'social_facebook' => 'string',
'social_soroush' => 'string',
'social_website' => 'string',
'is_mobile_required' => 'bool',
'is_description_required' => 'bool',
'national_code_status' => 'string',
'postal_code_status' => 'string',
'address_status' => 'string',
'email_status' => 'string',
'telegram_id_status' => 'string',
'first_custom_field_status' => 'bool',
'first_custom_field_title' => 'string',
'first_custom_field_placeholder' => 'string',
'second_custom_field_status' => 'bool',
'second_custom_field_title' => 'string',
'second_custom_field_placeholder' => 'string',
'third_custom_field_status' => 'string',
'third_custom_field_title' => 'string',
'third_custom_field_placeholder' => 'string',
'commision_type' => 'int',
'accordion_bij6ke' => 'string',
'g1' => 'string',
'notification' => 'string',
'default_fields' => 'string',
'custom_fields' => 'string',
'commision_group' => 'string',
'social_pages' => 'string',
'optional_fields' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'uuid',
'sort' => null,
'user_created' => null,
'date_created' => 'timestamp',
'user_updated' => null,
'date_updated' => 'timestamp',
'subsidiary_account' => null,
'title' => null,
'unique_url_address' => null,
'is_default' => null,
'description' => null,
'image' => null,
'sms_notification_mobile' => null,
'email_notification' => null,
'web_hook' => null,
'browser_notification' => null,
'telegram_bot' => null,
'social_twitter' => null,
'social_instagram' => null,
'social_facebook' => null,
'social_soroush' => null,
'social_website' => null,
'is_mobile_required' => null,
'is_description_required' => null,
'national_code_status' => null,
'postal_code_status' => null,
'address_status' => null,
'email_status' => null,
'telegram_id_status' => null,
'first_custom_field_status' => null,
'first_custom_field_title' => null,
'first_custom_field_placeholder' => null,
'second_custom_field_status' => null,
'second_custom_field_title' => null,
'second_custom_field_placeholder' => null,
'third_custom_field_status' => null,
'third_custom_field_title' => null,
'third_custom_field_placeholder' => null,
'commision_type' => null,
'accordion_bij6ke' => null,
'g1' => null,
'notification' => null,
'default_fields' => null,
'custom_fields' => null,
'commision_group' => null,
'social_pages' => null,
'optional_fields' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
'sort' => 'sort',
'user_created' => 'user_created',
'date_created' => 'date_created',
'user_updated' => 'user_updated',
'date_updated' => 'date_updated',
'subsidiary_account' => 'SubsidiaryAccount',
'title' => 'Title',
'unique_url_address' => 'UniqueUrlAddress',
'is_default' => 'IsDefault',
'description' => 'Description',
'image' => 'Image',
'sms_notification_mobile' => 'SmsNotificationMobile',
'email_notification' => 'EmailNotification',
'web_hook' => 'WebHook',
'browser_notification' => 'BrowserNotification',
'telegram_bot' => 'TelegramBot',
'social_twitter' => 'SocialTwitter',
'social_instagram' => 'SocialInstagram',
'social_facebook' => 'SocialFacebook',
'social_soroush' => 'SocialSoroush',
'social_website' => 'SocialWebsite',
'is_mobile_required' => 'IsMobileRequired',
'is_description_required' => 'IsDescriptionRequired',
'national_code_status' => 'NationalCodeStatus',
'postal_code_status' => 'PostalCodeStatus',
'address_status' => 'AddressStatus',
'email_status' => 'EmailStatus',
'telegram_id_status' => 'TelegramIdStatus',
'first_custom_field_status' => 'FirstCustomFieldStatus',
'first_custom_field_title' => 'FirstCustomFieldTitle',
'first_custom_field_placeholder' => 'FirstCustomFieldPlaceholder',
'second_custom_field_status' => 'SecondCustomFieldStatus',
'second_custom_field_title' => 'SecondCustomFieldTitle',
'second_custom_field_placeholder' => 'SecondCustomFieldPlaceholder',
'third_custom_field_status' => 'ThirdCustomFieldStatus',
'third_custom_field_title' => 'ThirdCustomFieldTitle',
'third_custom_field_placeholder' => 'ThirdCustomFieldPlaceholder',
'commision_type' => 'CommisionType',
'accordion_bij6ke' => 'accordion-bij6ke',
'g1' => 'G1',
'notification' => 'Notification',
'default_fields' => 'Default_Fields',
'custom_fields' => 'Custom_fields',
'commision_group' => 'commision_group',
'social_pages' => 'social_pages',
'optional_fields' => 'Optional_fields'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
'sort' => 'setSort',
'user_created' => 'setUserCreated',
'date_created' => 'setDateCreated',
'user_updated' => 'setUserUpdated',
'date_updated' => 'setDateUpdated',
'subsidiary_account' => 'setSubsidiaryAccount',
'title' => 'setTitle',
'unique_url_address' => 'setUniqueUrlAddress',
'is_default' => 'setIsDefault',
'description' => 'setDescription',
'image' => 'setImage',
'sms_notification_mobile' => 'setSmsNotificationMobile',
'email_notification' => 'setEmailNotification',
'web_hook' => 'setWebHook',
'browser_notification' => 'setBrowserNotification',
'telegram_bot' => 'setTelegramBot',
'social_twitter' => 'setSocialTwitter',
'social_instagram' => 'setSocialInstagram',
'social_facebook' => 'setSocialFacebook',
'social_soroush' => 'setSocialSoroush',
'social_website' => 'setSocialWebsite',
'is_mobile_required' => 'setIsMobileRequired',
'is_description_required' => 'setIsDescriptionRequired',
'national_code_status' => 'setNationalCodeStatus',
'postal_code_status' => 'setPostalCodeStatus',
'address_status' => 'setAddressStatus',
'email_status' => 'setEmailStatus',
'telegram_id_status' => 'setTelegramIdStatus',
'first_custom_field_status' => 'setFirstCustomFieldStatus',
'first_custom_field_title' => 'setFirstCustomFieldTitle',
'first_custom_field_placeholder' => 'setFirstCustomFieldPlaceholder',
'second_custom_field_status' => 'setSecondCustomFieldStatus',
'second_custom_field_title' => 'setSecondCustomFieldTitle',
'second_custom_field_placeholder' => 'setSecondCustomFieldPlaceholder',
'third_custom_field_status' => 'setThirdCustomFieldStatus',
'third_custom_field_title' => 'setThirdCustomFieldTitle',
'third_custom_field_placeholder' => 'setThirdCustomFieldPlaceholder',
'commision_type' => 'setCommisionType',
'accordion_bij6ke' => 'setAccordionBij6ke',
'g1' => 'setG1',
'notification' => 'setNotification',
'default_fields' => 'setDefaultFields',
'custom_fields' => 'setCustomFields',
'commision_group' => 'setCommisionGroup',
'social_pages' => 'setSocialPages',
'optional_fields' => 'setOptionalFields'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
'sort' => 'getSort',
'user_created' => 'getUserCreated',
'date_created' => 'getDateCreated',
'user_updated' => 'getUserUpdated',
'date_updated' => 'getDateUpdated',
'subsidiary_account' => 'getSubsidiaryAccount',
'title' => 'getTitle',
'unique_url_address' => 'getUniqueUrlAddress',
'is_default' => 'getIsDefault',
'description' => 'getDescription',
'image' => 'getImage',
'sms_notification_mobile' => 'getSmsNotificationMobile',
'email_notification' => 'getEmailNotification',
'web_hook' => 'getWebHook',
'browser_notification' => 'getBrowserNotification',
'telegram_bot' => 'getTelegramBot',
'social_twitter' => 'getSocialTwitter',
'social_instagram' => 'getSocialInstagram',
'social_facebook' => 'getSocialFacebook',
'social_soroush' => 'getSocialSoroush',
'social_website' => 'getSocialWebsite',
'is_mobile_required' => 'getIsMobileRequired',
'is_description_required' => 'getIsDescriptionRequired',
'national_code_status' => 'getNationalCodeStatus',
'postal_code_status' => 'getPostalCodeStatus',
'address_status' => 'getAddressStatus',
'email_status' => 'getEmailStatus',
'telegram_id_status' => 'getTelegramIdStatus',
'first_custom_field_status' => 'getFirstCustomFieldStatus',
'first_custom_field_title' => 'getFirstCustomFieldTitle',
'first_custom_field_placeholder' => 'getFirstCustomFieldPlaceholder',
'second_custom_field_status' => 'getSecondCustomFieldStatus',
'second_custom_field_title' => 'getSecondCustomFieldTitle',
'second_custom_field_placeholder' => 'getSecondCustomFieldPlaceholder',
'third_custom_field_status' => 'getThirdCustomFieldStatus',
'third_custom_field_title' => 'getThirdCustomFieldTitle',
'third_custom_field_placeholder' => 'getThirdCustomFieldPlaceholder',
'commision_type' => 'getCommisionType',
'accordion_bij6ke' => 'getAccordionBij6ke',
'g1' => 'getG1',
'notification' => 'getNotification',
'default_fields' => 'getDefaultFields',
'custom_fields' => 'getCustomFields',
'commision_group' => 'getCommisionGroup',
'social_pages' => 'getSocialPages',
'optional_fields' => 'getOptionalFields'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['sort'] = isset($data['sort']) ? $data['sort'] : null;
        $this->container['user_created'] = isset($data['user_created']) ? $data['user_created'] : null;
        $this->container['date_created'] = isset($data['date_created']) ? $data['date_created'] : null;
        $this->container['user_updated'] = isset($data['user_updated']) ? $data['user_updated'] : null;
        $this->container['date_updated'] = isset($data['date_updated']) ? $data['date_updated'] : null;
        $this->container['subsidiary_account'] = isset($data['subsidiary_account']) ? $data['subsidiary_account'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['unique_url_address'] = isset($data['unique_url_address']) ? $data['unique_url_address'] : null;
        $this->container['is_default'] = isset($data['is_default']) ? $data['is_default'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['image'] = isset($data['image']) ? $data['image'] : null;
        $this->container['sms_notification_mobile'] = isset($data['sms_notification_mobile']) ? $data['sms_notification_mobile'] : null;
        $this->container['email_notification'] = isset($data['email_notification']) ? $data['email_notification'] : null;
        $this->container['web_hook'] = isset($data['web_hook']) ? $data['web_hook'] : null;
        $this->container['browser_notification'] = isset($data['browser_notification']) ? $data['browser_notification'] : null;
        $this->container['telegram_bot'] = isset($data['telegram_bot']) ? $data['telegram_bot'] : null;
        $this->container['social_twitter'] = isset($data['social_twitter']) ? $data['social_twitter'] : null;
        $this->container['social_instagram'] = isset($data['social_instagram']) ? $data['social_instagram'] : null;
        $this->container['social_facebook'] = isset($data['social_facebook']) ? $data['social_facebook'] : null;
        $this->container['social_soroush'] = isset($data['social_soroush']) ? $data['social_soroush'] : null;
        $this->container['social_website'] = isset($data['social_website']) ? $data['social_website'] : null;
        $this->container['is_mobile_required'] = isset($data['is_mobile_required']) ? $data['is_mobile_required'] : null;
        $this->container['is_description_required'] = isset($data['is_description_required']) ? $data['is_description_required'] : null;
        $this->container['national_code_status'] = isset($data['national_code_status']) ? $data['national_code_status'] : null;
        $this->container['postal_code_status'] = isset($data['postal_code_status']) ? $data['postal_code_status'] : null;
        $this->container['address_status'] = isset($data['address_status']) ? $data['address_status'] : null;
        $this->container['email_status'] = isset($data['email_status']) ? $data['email_status'] : null;
        $this->container['telegram_id_status'] = isset($data['telegram_id_status']) ? $data['telegram_id_status'] : null;
        $this->container['first_custom_field_status'] = isset($data['first_custom_field_status']) ? $data['first_custom_field_status'] : null;
        $this->container['first_custom_field_title'] = isset($data['first_custom_field_title']) ? $data['first_custom_field_title'] : null;
        $this->container['first_custom_field_placeholder'] = isset($data['first_custom_field_placeholder']) ? $data['first_custom_field_placeholder'] : null;
        $this->container['second_custom_field_status'] = isset($data['second_custom_field_status']) ? $data['second_custom_field_status'] : null;
        $this->container['second_custom_field_title'] = isset($data['second_custom_field_title']) ? $data['second_custom_field_title'] : null;
        $this->container['second_custom_field_placeholder'] = isset($data['second_custom_field_placeholder']) ? $data['second_custom_field_placeholder'] : null;
        $this->container['third_custom_field_status'] = isset($data['third_custom_field_status']) ? $data['third_custom_field_status'] : null;
        $this->container['third_custom_field_title'] = isset($data['third_custom_field_title']) ? $data['third_custom_field_title'] : null;
        $this->container['third_custom_field_placeholder'] = isset($data['third_custom_field_placeholder']) ? $data['third_custom_field_placeholder'] : null;
        $this->container['commision_type'] = isset($data['commision_type']) ? $data['commision_type'] : null;
        $this->container['accordion_bij6ke'] = isset($data['accordion_bij6ke']) ? $data['accordion_bij6ke'] : null;
        $this->container['g1'] = isset($data['g1']) ? $data['g1'] : null;
        $this->container['notification'] = isset($data['notification']) ? $data['notification'] : null;
        $this->container['default_fields'] = isset($data['default_fields']) ? $data['default_fields'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
        $this->container['commision_group'] = isset($data['commision_group']) ? $data['commision_group'] : null;
        $this->container['social_pages'] = isset($data['social_pages']) ? $data['social_pages'] : null;
        $this->container['optional_fields'] = isset($data['optional_fields']) ? $data['optional_fields'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets sort
     *
     * @return int
     */
    public function getSort()
    {
        return $this->container['sort'];
    }

    /**
     * Sets sort
     *
     * @param int $sort sort
     *
     * @return $this
     */
    public function setSort($sort)
    {
        $this->container['sort'] = $sort;

        return $this;
    }

    /**
     * Gets user_created
     *
     * @return OneOfItemsGatewayUserCreated
     */
    public function getUserCreated()
    {
        return $this->container['user_created'];
    }

    /**
     * Sets user_created
     *
     * @param OneOfItemsGatewayUserCreated $user_created user_created
     *
     * @return $this
     */
    public function setUserCreated($user_created)
    {
        $this->container['user_created'] = $user_created;

        return $this;
    }

    /**
     * Gets date_created
     *
     * @return string
     */
    public function getDateCreated()
    {
        return $this->container['date_created'];
    }

    /**
     * Sets date_created
     *
     * @param string $date_created date_created
     *
     * @return $this
     */
    public function setDateCreated($date_created)
    {
        $this->container['date_created'] = $date_created;

        return $this;
    }

    /**
     * Gets user_updated
     *
     * @return OneOfItemsGatewayUserUpdated
     */
    public function getUserUpdated()
    {
        return $this->container['user_updated'];
    }

    /**
     * Sets user_updated
     *
     * @param OneOfItemsGatewayUserUpdated $user_updated user_updated
     *
     * @return $this
     */
    public function setUserUpdated($user_updated)
    {
        $this->container['user_updated'] = $user_updated;

        return $this;
    }

    /**
     * Gets date_updated
     *
     * @return string
     */
    public function getDateUpdated()
    {
        return $this->container['date_updated'];
    }

    /**
     * Sets date_updated
     *
     * @param string $date_updated date_updated
     *
     * @return $this
     */
    public function setDateUpdated($date_updated)
    {
        $this->container['date_updated'] = $date_updated;

        return $this;
    }

    /**
     * Gets subsidiary_account
     *
     * @return OneOfItemsGatewaySubsidiaryAccount
     */
    public function getSubsidiaryAccount()
    {
        return $this->container['subsidiary_account'];
    }

    /**
     * Sets subsidiary_account
     *
     * @param OneOfItemsGatewaySubsidiaryAccount $subsidiary_account subsidiary_account
     *
     * @return $this
     */
    public function setSubsidiaryAccount($subsidiary_account)
    {
        $this->container['subsidiary_account'] = $subsidiary_account;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string $title title
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets unique_url_address
     *
     * @return string
     */
    public function getUniqueUrlAddress()
    {
        return $this->container['unique_url_address'];
    }

    /**
     * Sets unique_url_address
     *
     * @param string $unique_url_address unique_url_address
     *
     * @return $this
     */
    public function setUniqueUrlAddress($unique_url_address)
    {
        $this->container['unique_url_address'] = $unique_url_address;

        return $this;
    }

    /**
     * Gets is_default
     *
     * @return bool
     */
    public function getIsDefault()
    {
        return $this->container['is_default'];
    }

    /**
     * Sets is_default
     *
     * @param bool $is_default is_default
     *
     * @return $this
     */
    public function setIsDefault($is_default)
    {
        $this->container['is_default'] = $is_default;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets image
     *
     * @return OneOfItemsGatewayImage
     */
    public function getImage()
    {
        return $this->container['image'];
    }

    /**
     * Sets image
     *
     * @param OneOfItemsGatewayImage $image image
     *
     * @return $this
     */
    public function setImage($image)
    {
        $this->container['image'] = $image;

        return $this;
    }

    /**
     * Gets sms_notification_mobile
     *
     * @return string
     */
    public function getSmsNotificationMobile()
    {
        return $this->container['sms_notification_mobile'];
    }

    /**
     * Sets sms_notification_mobile
     *
     * @param string $sms_notification_mobile sms_notification_mobile
     *
     * @return $this
     */
    public function setSmsNotificationMobile($sms_notification_mobile)
    {
        $this->container['sms_notification_mobile'] = $sms_notification_mobile;

        return $this;
    }

    /**
     * Gets email_notification
     *
     * @return string
     */
    public function getEmailNotification()
    {
        return $this->container['email_notification'];
    }

    /**
     * Sets email_notification
     *
     * @param string $email_notification email_notification
     *
     * @return $this
     */
    public function setEmailNotification($email_notification)
    {
        $this->container['email_notification'] = $email_notification;

        return $this;
    }

    /**
     * Gets web_hook
     *
     * @return string
     */
    public function getWebHook()
    {
        return $this->container['web_hook'];
    }

    /**
     * Sets web_hook
     *
     * @param string $web_hook web_hook
     *
     * @return $this
     */
    public function setWebHook($web_hook)
    {
        $this->container['web_hook'] = $web_hook;

        return $this;
    }

    /**
     * Gets browser_notification
     *
     * @return bool
     */
    public function getBrowserNotification()
    {
        return $this->container['browser_notification'];
    }

    /**
     * Sets browser_notification
     *
     * @param bool $browser_notification browser_notification
     *
     * @return $this
     */
    public function setBrowserNotification($browser_notification)
    {
        $this->container['browser_notification'] = $browser_notification;

        return $this;
    }

    /**
     * Gets telegram_bot
     *
     * @return string
     */
    public function getTelegramBot()
    {
        return $this->container['telegram_bot'];
    }

    /**
     * Sets telegram_bot
     *
     * @param string $telegram_bot telegram_bot
     *
     * @return $this
     */
    public function setTelegramBot($telegram_bot)
    {
        $this->container['telegram_bot'] = $telegram_bot;

        return $this;
    }

    /**
     * Gets social_twitter
     *
     * @return string
     */
    public function getSocialTwitter()
    {
        return $this->container['social_twitter'];
    }

    /**
     * Sets social_twitter
     *
     * @param string $social_twitter social_twitter
     *
     * @return $this
     */
    public function setSocialTwitter($social_twitter)
    {
        $this->container['social_twitter'] = $social_twitter;

        return $this;
    }

    /**
     * Gets social_instagram
     *
     * @return string
     */
    public function getSocialInstagram()
    {
        return $this->container['social_instagram'];
    }

    /**
     * Sets social_instagram
     *
     * @param string $social_instagram social_instagram
     *
     * @return $this
     */
    public function setSocialInstagram($social_instagram)
    {
        $this->container['social_instagram'] = $social_instagram;

        return $this;
    }

    /**
     * Gets social_facebook
     *
     * @return string
     */
    public function getSocialFacebook()
    {
        return $this->container['social_facebook'];
    }

    /**
     * Sets social_facebook
     *
     * @param string $social_facebook social_facebook
     *
     * @return $this
     */
    public function setSocialFacebook($social_facebook)
    {
        $this->container['social_facebook'] = $social_facebook;

        return $this;
    }

    /**
     * Gets social_soroush
     *
     * @return string
     */
    public function getSocialSoroush()
    {
        return $this->container['social_soroush'];
    }

    /**
     * Sets social_soroush
     *
     * @param string $social_soroush social_soroush
     *
     * @return $this
     */
    public function setSocialSoroush($social_soroush)
    {
        $this->container['social_soroush'] = $social_soroush;

        return $this;
    }

    /**
     * Gets social_website
     *
     * @return string
     */
    public function getSocialWebsite()
    {
        return $this->container['social_website'];
    }

    /**
     * Sets social_website
     *
     * @param string $social_website social_website
     *
     * @return $this
     */
    public function setSocialWebsite($social_website)
    {
        $this->container['social_website'] = $social_website;

        return $this;
    }

    /**
     * Gets is_mobile_required
     *
     * @return bool
     */
    public function getIsMobileRequired()
    {
        return $this->container['is_mobile_required'];
    }

    /**
     * Sets is_mobile_required
     *
     * @param bool $is_mobile_required is_mobile_required
     *
     * @return $this
     */
    public function setIsMobileRequired($is_mobile_required)
    {
        $this->container['is_mobile_required'] = $is_mobile_required;

        return $this;
    }

    /**
     * Gets is_description_required
     *
     * @return bool
     */
    public function getIsDescriptionRequired()
    {
        return $this->container['is_description_required'];
    }

    /**
     * Sets is_description_required
     *
     * @param bool $is_description_required is_description_required
     *
     * @return $this
     */
    public function setIsDescriptionRequired($is_description_required)
    {
        $this->container['is_description_required'] = $is_description_required;

        return $this;
    }

    /**
     * Gets national_code_status
     *
     * @return string
     */
    public function getNationalCodeStatus()
    {
        return $this->container['national_code_status'];
    }

    /**
     * Sets national_code_status
     *
     * @param string $national_code_status national_code_status
     *
     * @return $this
     */
    public function setNationalCodeStatus($national_code_status)
    {
        $this->container['national_code_status'] = $national_code_status;

        return $this;
    }

    /**
     * Gets postal_code_status
     *
     * @return string
     */
    public function getPostalCodeStatus()
    {
        return $this->container['postal_code_status'];
    }

    /**
     * Sets postal_code_status
     *
     * @param string $postal_code_status postal_code_status
     *
     * @return $this
     */
    public function setPostalCodeStatus($postal_code_status)
    {
        $this->container['postal_code_status'] = $postal_code_status;

        return $this;
    }

    /**
     * Gets address_status
     *
     * @return string
     */
    public function getAddressStatus()
    {
        return $this->container['address_status'];
    }

    /**
     * Sets address_status
     *
     * @param string $address_status address_status
     *
     * @return $this
     */
    public function setAddressStatus($address_status)
    {
        $this->container['address_status'] = $address_status;

        return $this;
    }

    /**
     * Gets email_status
     *
     * @return string
     */
    public function getEmailStatus()
    {
        return $this->container['email_status'];
    }

    /**
     * Sets email_status
     *
     * @param string $email_status email_status
     *
     * @return $this
     */
    public function setEmailStatus($email_status)
    {
        $this->container['email_status'] = $email_status;

        return $this;
    }

    /**
     * Gets telegram_id_status
     *
     * @return string
     */
    public function getTelegramIdStatus()
    {
        return $this->container['telegram_id_status'];
    }

    /**
     * Sets telegram_id_status
     *
     * @param string $telegram_id_status telegram_id_status
     *
     * @return $this
     */
    public function setTelegramIdStatus($telegram_id_status)
    {
        $this->container['telegram_id_status'] = $telegram_id_status;

        return $this;
    }

    /**
     * Gets first_custom_field_status
     *
     * @return bool
     */
    public function getFirstCustomFieldStatus()
    {
        return $this->container['first_custom_field_status'];
    }

    /**
     * Sets first_custom_field_status
     *
     * @param bool $first_custom_field_status first_custom_field_status
     *
     * @return $this
     */
    public function setFirstCustomFieldStatus($first_custom_field_status)
    {
        $this->container['first_custom_field_status'] = $first_custom_field_status;

        return $this;
    }

    /**
     * Gets first_custom_field_title
     *
     * @return string
     */
    public function getFirstCustomFieldTitle()
    {
        return $this->container['first_custom_field_title'];
    }

    /**
     * Sets first_custom_field_title
     *
     * @param string $first_custom_field_title first_custom_field_title
     *
     * @return $this
     */
    public function setFirstCustomFieldTitle($first_custom_field_title)
    {
        $this->container['first_custom_field_title'] = $first_custom_field_title;

        return $this;
    }

    /**
     * Gets first_custom_field_placeholder
     *
     * @return string
     */
    public function getFirstCustomFieldPlaceholder()
    {
        return $this->container['first_custom_field_placeholder'];
    }

    /**
     * Sets first_custom_field_placeholder
     *
     * @param string $first_custom_field_placeholder first_custom_field_placeholder
     *
     * @return $this
     */
    public function setFirstCustomFieldPlaceholder($first_custom_field_placeholder)
    {
        $this->container['first_custom_field_placeholder'] = $first_custom_field_placeholder;

        return $this;
    }

    /**
     * Gets second_custom_field_status
     *
     * @return bool
     */
    public function getSecondCustomFieldStatus()
    {
        return $this->container['second_custom_field_status'];
    }

    /**
     * Sets second_custom_field_status
     *
     * @param bool $second_custom_field_status second_custom_field_status
     *
     * @return $this
     */
    public function setSecondCustomFieldStatus($second_custom_field_status)
    {
        $this->container['second_custom_field_status'] = $second_custom_field_status;

        return $this;
    }

    /**
     * Gets second_custom_field_title
     *
     * @return string
     */
    public function getSecondCustomFieldTitle()
    {
        return $this->container['second_custom_field_title'];
    }

    /**
     * Sets second_custom_field_title
     *
     * @param string $second_custom_field_title second_custom_field_title
     *
     * @return $this
     */
    public function setSecondCustomFieldTitle($second_custom_field_title)
    {
        $this->container['second_custom_field_title'] = $second_custom_field_title;

        return $this;
    }

    /**
     * Gets second_custom_field_placeholder
     *
     * @return string
     */
    public function getSecondCustomFieldPlaceholder()
    {
        return $this->container['second_custom_field_placeholder'];
    }

    /**
     * Sets second_custom_field_placeholder
     *
     * @param string $second_custom_field_placeholder second_custom_field_placeholder
     *
     * @return $this
     */
    public function setSecondCustomFieldPlaceholder($second_custom_field_placeholder)
    {
        $this->container['second_custom_field_placeholder'] = $second_custom_field_placeholder;

        return $this;
    }

    /**
     * Gets third_custom_field_status
     *
     * @return string
     */
    public function getThirdCustomFieldStatus()
    {
        return $this->container['third_custom_field_status'];
    }

    /**
     * Sets third_custom_field_status
     *
     * @param string $third_custom_field_status third_custom_field_status
     *
     * @return $this
     */
    public function setThirdCustomFieldStatus($third_custom_field_status)
    {
        $this->container['third_custom_field_status'] = $third_custom_field_status;

        return $this;
    }

    /**
     * Gets third_custom_field_title
     *
     * @return string
     */
    public function getThirdCustomFieldTitle()
    {
        return $this->container['third_custom_field_title'];
    }

    /**
     * Sets third_custom_field_title
     *
     * @param string $third_custom_field_title third_custom_field_title
     *
     * @return $this
     */
    public function setThirdCustomFieldTitle($third_custom_field_title)
    {
        $this->container['third_custom_field_title'] = $third_custom_field_title;

        return $this;
    }

    /**
     * Gets third_custom_field_placeholder
     *
     * @return string
     */
    public function getThirdCustomFieldPlaceholder()
    {
        return $this->container['third_custom_field_placeholder'];
    }

    /**
     * Sets third_custom_field_placeholder
     *
     * @param string $third_custom_field_placeholder third_custom_field_placeholder
     *
     * @return $this
     */
    public function setThirdCustomFieldPlaceholder($third_custom_field_placeholder)
    {
        $this->container['third_custom_field_placeholder'] = $third_custom_field_placeholder;

        return $this;
    }

    /**
     * Gets commision_type
     *
     * @return int
     */
    public function getCommisionType()
    {
        return $this->container['commision_type'];
    }

    /**
     * Sets commision_type
     *
     * @param int $commision_type commision_type
     *
     * @return $this
     */
    public function setCommisionType($commision_type)
    {
        $this->container['commision_type'] = $commision_type;

        return $this;
    }

    /**
     * Gets accordion_bij6ke
     *
     * @return string
     */
    public function getAccordionBij6ke()
    {
        return $this->container['accordion_bij6ke'];
    }

    /**
     * Sets accordion_bij6ke
     *
     * @param string $accordion_bij6ke accordion_bij6ke
     *
     * @return $this
     */
    public function setAccordionBij6ke($accordion_bij6ke)
    {
        $this->container['accordion_bij6ke'] = $accordion_bij6ke;

        return $this;
    }

    /**
     * Gets g1
     *
     * @return string
     */
    public function getG1()
    {
        return $this->container['g1'];
    }

    /**
     * Sets g1
     *
     * @param string $g1 g1
     *
     * @return $this
     */
    public function setG1($g1)
    {
        $this->container['g1'] = $g1;

        return $this;
    }

    /**
     * Gets notification
     *
     * @return string
     */
    public function getNotification()
    {
        return $this->container['notification'];
    }

    /**
     * Sets notification
     *
     * @param string $notification notification
     *
     * @return $this
     */
    public function setNotification($notification)
    {
        $this->container['notification'] = $notification;

        return $this;
    }

    /**
     * Gets default_fields
     *
     * @return string
     */
    public function getDefaultFields()
    {
        return $this->container['default_fields'];
    }

    /**
     * Sets default_fields
     *
     * @param string $default_fields default_fields
     *
     * @return $this
     */
    public function setDefaultFields($default_fields)
    {
        $this->container['default_fields'] = $default_fields;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return string
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param string $custom_fields custom_fields
     *
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }

    /**
     * Gets commision_group
     *
     * @return string
     */
    public function getCommisionGroup()
    {
        return $this->container['commision_group'];
    }

    /**
     * Sets commision_group
     *
     * @param string $commision_group commision_group
     *
     * @return $this
     */
    public function setCommisionGroup($commision_group)
    {
        $this->container['commision_group'] = $commision_group;

        return $this;
    }

    /**
     * Gets social_pages
     *
     * @return string
     */
    public function getSocialPages()
    {
        return $this->container['social_pages'];
    }

    /**
     * Sets social_pages
     *
     * @param string $social_pages social_pages
     *
     * @return $this
     */
    public function setSocialPages($social_pages)
    {
        $this->container['social_pages'] = $social_pages;

        return $this;
    }

    /**
     * Gets optional_fields
     *
     * @return string
     */
    public function getOptionalFields()
    {
        return $this->container['optional_fields'];
    }

    /**
     * Sets optional_fields
     *
     * @param string $optional_fields optional_fields
     *
     * @return $this
     */
    public function setOptionalFields($optional_fields)
    {
        $this->container['optional_fields'] = $optional_fields;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
